// Code generated by goctl. DO NOT EDIT.
// Source: main.proto

package server

import (
	"context"

	"github.com/nakamu-ms/micro-services/services/langchain/internal/logic"
	"github.com/nakamu-ms/micro-services/services/langchain/internal/svc"
	"github.com/nakamu-ms/micro-services/services/langchain/pb"
)

type LangchainServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedLangchainServer
}

func NewLangchainServer(svcCtx *svc.ServiceContext) *LangchainServer {
	return &LangchainServer{
		svcCtx: svcCtx,
	}
}

func (s *LangchainServer) Models(ctx context.Context, in *pb.ModelsRequest) (*pb.ModelsResponse, error) {
	l := logic.NewModelsLogic(ctx, s.svcCtx)
	return l.Models(in)
}

func (s *LangchainServer) Prompt(ctx context.Context, in *pb.PromptRequest) (*pb.PromptResponse, error) {
	l := logic.NewPromptLogic(ctx, s.svcCtx)
	return l.Prompt(in)
}

func (s *LangchainServer) Indexes(ctx context.Context, in *pb.IndexesRequest) (*pb.IndexesResponse, error) {
	l := logic.NewIndexesLogic(ctx, s.svcCtx)
	return l.Indexes(in)
}

func (s *LangchainServer) Chains(ctx context.Context, in *pb.ChainsRequest) (*pb.ChainsResponse, error) {
	l := logic.NewChainsLogic(ctx, s.svcCtx)
	return l.Chains(in)
}

func (s *LangchainServer) Agents(ctx context.Context, in *pb.AgentsRequest) (*pb.AgentsResponse, error) {
	l := logic.NewAgentsLogic(ctx, s.svcCtx)
	return l.Agents(in)
}

func (s *LangchainServer) Memory(ctx context.Context, in *pb.MemoryRequest) (*pb.MemoryResponse, error) {
	l := logic.NewMemoryLogic(ctx, s.svcCtx)
	return l.Memory(in)
}
